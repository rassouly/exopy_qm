from textwrap import fill

from enaml.core.api import Looper
from enaml.widgets.api import (Label, Field, ToolButton, FileDialogEx, Container,
                               PushButton)
from enaml.stdlib.fields import Field
from enaml.layout.api import hbox, vbox, spacer, align
from exopy.app.icons.api import get_icon

from .base_instr_view import InstrView


enamldef SetQMConfigView(InstrView): view:
    """View for the SetQMConfigTask.

    """
    constraints = [vbox(hbox(instr_label, path_label, spacer),
                        hbox(instr_selection, path_val, path_exp, refresh),
                        param_list),
                   align('left', path_label, path_val)]

    Label: path_label:
        text = "Path to config file"
    Field: path_val:
        text := task.path_to_config_file
        tool_tip = fill("Path to config file. The file must contain a function get_config() which returns the config dictionary")

    ToolButton: path_exp:
        hug_width = 'strong'
        icon = get_icon(workbench, 'folder-open')
        clicked ::
            filter =['*.py']
            path = FileDialogEx.get_open_file_name(name_filters=filter)
            if path:
                path_val.text = path

    PushButton: refresh:
        text = 'Refresh'
        clicked ::
            task._post_setattr_path_to_config_file(path_val.text, path_val.text)

    Container: param_list:
        Looper:
            iterable << task.parameters
            Container:
                constraints = [hbox(label_loop, field_loop, label_comment),
                               align('v_center', label_loop, field_loop, label_comment)]
                padding = 2
                Label: label_loop:
                    text = loop_item
                Field: field_loop:
                    text = task.parameters[loop_item]
                    text >> task.parameters[loop_item]
                Label: label_comment:
                    text = task.comments[loop_item]
